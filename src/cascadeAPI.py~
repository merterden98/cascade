from src import makegraph

API = {
    "getPPIGraph": makegraph.getPPIGraph
}

print(API)
'''
    getPPIGraph:
    :param str matrix_filename: filepath to matrix containing edge-data i,e DSD/cDSD
    :param str labels_filename: file that contains label metadata see MIPSFirstLabels.list
    :param str label_type: Specifier to indicate if we use GO or MIPS labels
    :param bool heirarychy_labels: If labels have heirarchy, get heirarchy metadata
    :param str metric_type: What kind of edge metric are we using. *Note if DSD specified
                            we use a prebuilt custom_node_list_generator.
    :param (str, {str: [str]}) -> [[str, {str: float]] custom_node_list_generator:
           A function that takes matrix_filename, and a dictionary that maps a node
           name to a set of labels, and returns an array where each element is an
           array such that the first element is the name of the node, and the second
           is a dictionary that maps neighbors with the associated edge value. 
           See ./src/makegraph.py#load_dsd_matrix for example.
'''
getPPIGraph = API["getPPIGraph"]
